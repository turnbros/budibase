{{- if .Values.services.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
  labels:
    app.kubernetes.io/name: redis-service
    app.kubernetes.io/part-of: budibase
    app.kubernetes.io/component: redis
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: {{ .Values.services.redis.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-service
      app.kubernetes.io/part-of: budibase
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-service
        app.kubernetes.io/part-of: budibase
        app.kubernetes.io/component: redis
        app.kubernetes.io/managed-by: argocd
    spec:
      name: redis-service
      image: redis
      imagePullPolicy: Always
      containers:
      - args:
        - redis-server 
        - --requirepass 
        - {{ .Values.services.redis.password }}
        ports:
        - containerPort: {{ .Values.services.redis.port }}
        volumeMounts:
        - mountPath: /data
          name: redis-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data
{{- end }}