apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-service
  labels:
    app.kubernetes.io/name: worker-service
    app.kubernetes.io/part-of: budibase
    app.kubernetes.io/component: worker
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: {{ .Values.services.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: worker-service
      app.kubernetes.io/part-of: budibase
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker-service
        app.kubernetes.io/part-of: budibase
    spec:
      containers:
      - name: bbworker
        image: budibase/worker
        imagePullPolicy: Always
        restartPolicy: Always
        ports:
        - containerPort: {{ .Values.services.worker.port }}
        env:
        - name: CLUSTER_PORT
          value: {{ .Values.services.worker.port | quote }}
        - name: COUCH_DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "couchdb.fullname" . }}
              key: adminUsername
        - name: COUCH_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "couchdb.fullname" . }}
              key: adminPassword
        - name: COUCH_DB_URL
          {{ if .Values.services.couchdb.url }}
          value: {{ .Values.services.couchdb.url }}
          {{ else }}
          value: http://{{ .Release.Name }}-svc-couchdb:{{ .Values.services.couchdb.port }}
          {{ end }}
        - name: INTERNAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: internalApiKey
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: jwtSecret
        {{ if .Values.services.objectStore.region }}
        - name: AWS_REGION
          value: {{ .Values.services.objectStore.region }}
        {{ end }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreAccess
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreSecret
        - name: MINIO_URL
          {{ if .Values.services.objectStore.url }}
          value: {{ .Values.services.objectStore.url }}
          {{ else }}
          value: http://minio-service:{{ .Values.services.objectStore.port }}
          {{ end }}
        - name: PORT
          value: {{ .Values.services.worker.port | quote }}
        - name: REDIS_PASSWORD
          value: {{ .Values.services.redis.password | quote }}
        - name: REDIS_URL
          {{ if .Values.services.redis.url }}
          value: {{ .Values.services.redis.url }}
          {{ else }}
          value: redis-service:{{ .Values.services.redis.port }}
          {{ end }}
        - name: SELF_HOSTED
          value: {{ .Values.globals.selfHosted | quote }}
